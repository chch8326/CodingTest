'''
문제: 모험가 길드
한 마을에 모험가가 N명 있다. 모험가 길드에서는 N명의 모험가를 대상으로 공포도를 측정했는데, 공포도가 높은 모험가는 쉽게 공포를 느껴
위험 상황에서 제대로 대처할 능력이 떨어져 공포도가 X인 모험가는 반드시 X명 이상으로 모험가 그룹에 참여해야 한다.
각각의 모험가들의 공포도가 주어질 때, 여행을 떠날 수 있는 그룹 수의 최댓값을 구하는 프로그램을 작성하시오.

첫째 줄에 모험가의 수 N(1 <= N <= 100,000)이 주어진다.
둘째 줄에 각 모험가의 공포도의 값을 N이하의 자연수로 주어지며, 각 자연수는 공백으로 구분한다. 
몇 명의 모험가는 마을에 그대로 남아 있어도 되기 때문에 모든 모험가를 그룹에 넣을 필요는 없다.
'''

n = int(input())
x = list(map(int, input().split()))
x.sort()
advancher, group = 0, 0

for i in x:
    advancher += 1 # 모험가 한 명 추가
    
    # 현재 모험가 수와 리스트에서 들어오는 공포도가 같거나 크다면
    if advancher >= i:
        group += 1 # 그룹 추가
        advancher = 0 # 모험가 수 초기화
        
print(group)